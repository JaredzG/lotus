# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
version: "3.8"
services:
  lotus-web-app:
    image: jaredzg/lotus-web-app
    build:
      context: ./lotus-web-app
    environment:
      - SITE_HOST=0.0.0.0
      - SITE_PORT=3000
    ports:
      - 3000:3000
    volumes:
      - type: bind
        source: ./lotus-web-app
        target: /app
    depends_on:
      postgres:
        condition: service_healthy

  lotus-data-manager:
    image: jaredzg/lotus-data-manager
    build:
      context: ./lotus-data-manager
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD_FILE=/run/secrets/postgres-password
      - DB_NAME=lotus-database
      - S3_BUCKET_NAME=lotus-app-images
      - S3_BUCKET_REGION=us-east-2
      - S3_BUCKET_ACCESS_KEY=AKIA55IGFKLCGNSIHZWT
      - S3_BUCKET_SECRET_ACCESS_KEY_FILE=/run/secrets/s3-bucket-secret-access-key
    volumes:
      - type: bind
        source: ./lotus-data-manager
        target: /app
      - type: volume
        source: lotus-scraper-data
        target: /app/data
        volume:
          nocopy: true
    secrets:
      - postgres-password
      - s3-bucket-secret-access-key
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres
    restart: always
    user: postgres
    environment:
      - POSTGRES_DB=lotus-database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    secrets:
      - postgres-password
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin@email.com
      - PGADMIN_DEFAULT_PASSWORD_FILE=/run/secrets/pgadmin-password
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - 8000:80
    secrets:
      - pgadmin-password
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  lotus-scraper-data:
  postgres-data:
  pgadmin-data:

secrets:
  postgres-password:
    file: ./secrets/postgres.password.txt
  pgadmin-password:
    file: ./secrets/pgadmin.password.txt
  s3-bucket-secret-access-key:
    file: ./secrets/s3-bucket.secret-access-key.txt
